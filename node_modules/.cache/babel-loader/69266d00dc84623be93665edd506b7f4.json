{"ast":null,"code":"var _jsxFileName = \"/Users/tingyuanlu/Desktop/Learn React/covid_19/src/components/Chart/Chart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api/index';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData = await fetchDailyData();\n    };\n\n    console.log(dailyData);\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,05)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/tingyuanlu/Desktop/Learn React/covid_19/src/components/Chart/Chart.js"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","console","log","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","container"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAsC,OAAtC;AACA,SAAQC,cAAR,QAA4B,iBAA5B;AACA,SAAQC,IAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAR;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AACnE,QAAM,CAACC,SAAD,EAAWC,YAAX,IAAyBb,QAAQ,CAAC,EAAD,CAAvC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMa,QAAQ,GAAC,YAAS;AACpBD,MAAAA,YAAY,GAAE,MAAMX,cAAc,EAAlC;AACH,KAFD;;AAGAa,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACAE,IAAAA,QAAQ;AACX,GANQ,CAAT;AAQA,QAAMG,SAAS,GACXL,SAAS,CAACM,MAAV,gBACI,oBAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAACP,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAUA,IAAxB,CADL;AAEFC,MAAAA,QAAQ,EAAC,CAAC;AACNf,QAAAA,IAAI,EAACK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACZ,UAAAA;AAAD,SAAD,KAAeA,SAA7B,CADC;AAENe,QAAAA,KAAK,EAAC,UAFA;AAGNC,QAAAA,WAAW,EAAC,SAHN;AAINC,QAAAA,IAAI,EAAC;AAJC,OAAD,EAKP;AACElB,QAAAA,IAAI,EAACK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAACV,UAAAA;AAAD,SAAD,KAAYA,MAA1B,CADP;AAEEa,QAAAA,KAAK,EAAC,QAFR;AAGEC,QAAAA,WAAW,EAAC,KAHd;AAIEE,QAAAA,eAAe,EAAC,kBAJlB;AAKED,QAAAA,IAAI,EAAC;AALP,OALO;AAFP,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAkBI,IAnBR;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAACsB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCV,SAAnC,CADJ;AAGH,CApCD;;AAsCA,eAAeX,KAAf","sourcesContent":["import React,{useState,useEffect}from 'react';\nimport {fetchDailyData}from '../../api/index';\nimport {Line,Bar} from 'react-chartjs-2';\nimport styles from'./Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData,setDailyData]=useState([]);\n    useEffect(()=>{\n        const fetchAPI=async()=>{\n            setDailyData=(await fetchDailyData());\n        }\n        console.log(dailyData);\n        fetchAPI();\n    });\n\n    const lineChart=(\n        dailyData.length?(\n            <Line\n            data={{\n                labels:dailyData.map(({date})=>date),\n                datasets:[{\n                    data:dailyData.map(({confirmed})=>confirmed),\n                    label:'Infected',\n                    borderColor:'#3333ff',\n                    fill:true,\n                },{\n                    data:dailyData.map(({deaths})=>deaths),\n                    label:'Deaths',\n                    borderColor:'red',\n                    backgroundColor:'rgba(255,0,0,05)',\n                    fill:true,\n\n                }],\n            }}\n        />):null\n    );\n    \n    \n    return ( \n        <div className={styles.container}>{lineChart}</div>\n    );\n}\n \nexport default Chart;"]},"metadata":{},"sourceType":"module"}